import * as Ajv from "ajv";
import { getData } from "../privacy";
// We need to do this horrible thing because the return type of validate makes no sense
// https://github.com/epoberezkin/ajv/issues/911
var ajv = new Ajv();
export var addSchema = function (schema) {
    try {
        ajv.addSchema(schema, schema.id);
    }
    catch (e) {
        // Ignore error if schema already exist
        if (!e.message.includes("already exists")) {
            throw e;
        }
    }
};
export var validate = function (document, schema) {
    // TODO document.schema is set as mandatory here because for the moment it can't be made required in the interface
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    var result = schema ? ajv.validate(schema, getData(document)) : ajv.validate(document.schema, getData(document));
    // eslint-disable-next-line no-console
    // console.log(ajv.errors); // TODO: properly feedback error
    return result;
};
